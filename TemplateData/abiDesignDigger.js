const abiDesignDigger = [
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DESIGNER_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPGRADER_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'seed', type: 'uint256' },
      { internalType: 'uint256', name: 'id', type: 'uint256' },
      { internalType: 'uint256', name: 'rarity', type: 'uint256' },
    ],
    name: 'createRandomToken',
    outputs: [
      { internalType: 'uint256', name: 'nextSeed', type: 'uint256' },
      { internalType: 'uint256', name: 'encodedDetails', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'id', type: 'uint256' },
      { internalType: 'uint256', name: 'rarity', type: 'uint256' },
      { internalType: 'uint256', name: 'level', type: 'uint256' },
      { internalType: 'uint256', name: 'walkSpeed', type: 'uint256' },
      { internalType: 'uint256', name: 'skin', type: 'uint256' },
      { internalType: 'uint256', name: 'stamina', type: 'uint256' },
      { internalType: 'uint256', name: 'farmSpeed', type: 'uint256' },
      { internalType: 'uint256', name: 'power', type: 'uint256' },
      { internalType: 'uint256', name: 'blockNumber', type: 'uint256' },
    ],
    name: 'createToken',
    outputs: [
      { internalType: 'uint256', name: 'encodedDetails', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDropRate',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxLevel',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMintCost',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRarityStats',
    outputs: [
      {
        components: [
          {
            components: [
              { internalType: 'uint256', name: 'min', type: 'uint256' },
              { internalType: 'uint256', name: 'max', type: 'uint256' },
            ],
            internalType: 'struct DiggerDesign.StatsRange',
            name: 'stamina',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'uint256', name: 'min', type: 'uint256' },
              { internalType: 'uint256', name: 'max', type: 'uint256' },
            ],
            internalType: 'struct DiggerDesign.StatsRange',
            name: 'farmSpeed',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'uint256', name: 'min', type: 'uint256' },
              { internalType: 'uint256', name: 'max', type: 'uint256' },
            ],
            internalType: 'struct DiggerDesign.StatsRange',
            name: 'power',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'uint256', name: 'min', type: 'uint256' },
              { internalType: 'uint256', name: 'max', type: 'uint256' },
            ],
            internalType: 'struct DiggerDesign.StatsRange',
            name: 'walkSpeed',
            type: 'tuple',
          },
        ],
        internalType: 'struct DiggerDesign.Stats[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTokenLimit',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'rarity', type: 'uint256' },
      { internalType: 'uint256', name: 'level', type: 'uint256' },
    ],
    name: 'getUpgradeCost',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getUpgradeCosts',
    outputs: [{ internalType: 'uint256[][]', name: '', type: 'uint256[][]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getUpgradePowerDiggerCost',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256[]', name: 'value', type: 'uint256[]' }],
    name: 'setDropRate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'value', type: 'uint256' }],
    name: 'setMaxLevel',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'value', type: 'uint256' }],
    name: 'setMintCost',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'rarity', type: 'uint256' },
      {
        components: [
          {
            components: [
              { internalType: 'uint256', name: 'min', type: 'uint256' },
              { internalType: 'uint256', name: 'max', type: 'uint256' },
            ],
            internalType: 'struct DiggerDesign.StatsRange',
            name: 'stamina',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'uint256', name: 'min', type: 'uint256' },
              { internalType: 'uint256', name: 'max', type: 'uint256' },
            ],
            internalType: 'struct DiggerDesign.StatsRange',
            name: 'farmSpeed',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'uint256', name: 'min', type: 'uint256' },
              { internalType: 'uint256', name: 'max', type: 'uint256' },
            ],
            internalType: 'struct DiggerDesign.StatsRange',
            name: 'power',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'uint256', name: 'min', type: 'uint256' },
              { internalType: 'uint256', name: 'max', type: 'uint256' },
            ],
            internalType: 'struct DiggerDesign.StatsRange',
            name: 'walkSpeed',
            type: 'tuple',
          },
        ],
        internalType: 'struct DiggerDesign.Stats',
        name: 'stats',
        type: 'tuple',
      },
    ],
    name: 'setRarityStats',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'value', type: 'uint256' }],
    name: 'setTokenLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[][]', name: 'value', type: 'uint256[][]' },
    ],
    name: 'setUpgradeCosts',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'value', type: 'uint256' }],
    name: 'setUpgradePowerDiggerCost',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
];
